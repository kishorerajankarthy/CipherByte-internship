{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: reportlab in c:\\users\\dell\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.11_qbz5n2kfra8p0\\localcache\\local-packages\\python311\\site-packages (4.2.2)\n",
      "Requirement already satisfied: pillow>=9.0.0 in c:\\users\\dell\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.11_qbz5n2kfra8p0\\localcache\\local-packages\\python311\\site-packages (from reportlab) (10.4.0)\n",
      "Requirement already satisfied: chardet in c:\\users\\dell\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.11_qbz5n2kfra8p0\\localcache\\local-packages\\python311\\site-packages (from reportlab) (5.2.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 24.0 -> 24.1.2\n",
      "[notice] To update, run: C:\\Users\\DELL\\AppData\\Local\\Microsoft\\WindowsApps\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\python.exe -m pip install --upgrade pip\n"
     ]
    }
   ],
   "source": [
    "pip install reportlab\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Payment receipt generated successfully: payment_receipt_20240723080234.pdf\n"
     ]
    }
   ],
   "source": [
    "from reportlab.lib.pagesizes import letter\n",
    "from reportlab.pdfgen import canvas\n",
    "from datetime import datetime\n",
    "\n",
    "def create_payment_receipt(customer_name, amount_paid, payment_method):\n",
    "    # Create a unique filename based on current date and time\n",
    "    filename = f\"payment_receipt_{datetime.now().strftime('%Y%m%d%H%M%S')}.pdf\"\n",
    "\n",
    "    # Create a canvas (PDF document) with specified filename\n",
    "    c = canvas.Canvas(filename, pagesize=letter)\n",
    "\n",
    "    # Set font and size\n",
    "    c.setFont(\"Helvetica\", 12)\n",
    "\n",
    "    # Write receipt header\n",
    "    c.drawString(50, 750, \"Payment Receipt\")\n",
    "    c.line(50, 745, 550, 745)\n",
    "\n",
    "    # Write receipt details\n",
    "    c.drawString(50, 700, f\"Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n",
    "    c.drawString(50, 680, f\"Customer Name: {customer_name}\")\n",
    "    c.drawString(50, 660, f\"Amount Paid: ${amount_paid:.2f}\")\n",
    "    c.drawString(50, 640, f\"Payment Method: {payment_method}\")\n",
    "\n",
    "    # Draw a line separator\n",
    "    c.line(50, 620, 550, 620)\n",
    "\n",
    "    # Write footer\n",
    "    c.drawString(50, 600, \"Thank you for your payment!\")\n",
    "\n",
    "    # Save the PDF file\n",
    "    c.save()\n",
    "\n",
    "    print(f\"Payment receipt generated successfully: {filename}\")\n",
    "\n",
    "# Example usage:\n",
    "if __name__ == \"__main__\":\n",
    "    customer_name = \"John Doe\"\n",
    "    amount_paid = 100.0\n",
    "    payment_method = \"Credit Card\"\n",
    "\n",
    "    create_payment_receipt(customer_name, amount_paid, payment_method)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
